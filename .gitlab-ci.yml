image: docker:latest
services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  # This will suppress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_REF_NAME"'
cache:
  paths:
    - .m2/repository

stages:
  - verify
  - push
  - deploy

maven-verify:
  image: maven:3.5.0-jdk-8-slim
  stage: verify
  script: "mvn $MAVEN_CLI_OPTS clean verify -B"
  artifacts:
    paths:
      - target/*.jar
      - target/libs

docker-push:
  stage: push
  script:
  - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHA .
  - docker build -t $CI_REGISTRY/$CI_PROJECT_PATH:latest .
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
  - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHA
  - docker push $CI_REGISTRY/$CI_PROJECT_PATH:latest
  - docker logout $CI_REGISTRY

docker-deploy:
  image: alpine:3.6
  stage: deploy
  before_script:
    - apk add --no-cache openssh-client bash
  script:
    - ./deploy.sh
  environment: production
  only:
    - master