image: docker:latest
services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true"

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_REF_NAME"'
cache:
  paths:
    - .m2/repository

stages:
  - build
  - package
  - deploy

maven-build:
  image: maven:3.5.0-jdk-8-slim
  stage: build
  script: "mvn $MAVEN_CLI_OPTS clean verify -B"
  artifacts:
    paths:
      - target/*.jar

docker-build:
  stage: package
  script:
  - docker build -t registry.gitlab.com/distributed-mald/website .
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
  - docker push registry.gitlab.com/distributed-mald/website

docker-deploy:
  image: sahsu/docker-ecs-cli
  stage: deploy
  script:
  # used https://web.archive.org/web/20171017220027/https://serradev.wordpress.com/2017/05/11/cluster-of-docker-containers-in-aws-ecs-via-gitlab-pipelines/
    - ecs-cli configure --region eu-west-2 --access-key $AWS_ACCESS_KEY_ID --secret-key $AWS_SECRET_ACCESS_KEY --cluster mald-website-cluster
    # --size defaults to 1, --instance-type defaults to t2.micro
    - ecs-cli up --keypair gitlab-ci --capability-iam --vpc vpc-19e45970 --subnets subnet-1ccc6d67,subnet-f98079b4
    - ecs-cli compose service up --target-group-arn $PROD_TARGET_GROUP_ARN --container-name website --container-port 8080 --role ecsServiceRole
  environment:
    name: production
    url: $PROD_LOAD_BALANCER_URL
  only:
    - master